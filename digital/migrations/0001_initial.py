# Generated by Django 5.2.7 on 2025-10-16 15:09

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Classe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100, unique=True)),
                ('niveau', models.CharField(max_length=50)),
                ('nombre_etudiants', models.IntegerField(default=0)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Classe',
                'verbose_name_plural': 'Classes',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Cours',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=150)),
                ('description', models.TextField()),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('heures_credit', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cours', to='digital.classe')),
                ('enseignant', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='cours_enseignes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Cours',
                'verbose_name_plural': 'Cours',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='ContenuPedagogique',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titre', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('type_contenu', models.CharField(choices=[('resume', 'Résumé'), ('exercice', 'Exercice'), ('td', 'Travaux Dirigés'), ('tp', 'Travaux Pratiques'), ('ressource', 'Ressource externe')], max_length=50)),
                ('lien_fichier', models.FileField(blank=True, upload_to='contenus/%Y/%m/%d/')),
                ('lien_externe', models.URLField(blank=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contenus', to='digital.cours')),
            ],
            options={
                'verbose_name': 'Contenu Pédagogique',
                'verbose_name_plural': 'Contenus Pédagogiques',
                'ordering': ['-date_creation'],
            },
        ),
        migrations.CreateModel(
            name='Etudiant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_matricule', models.CharField(max_length=20, unique=True)),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('statut', models.CharField(choices=[('actif', 'Actif'), ('inactif', 'Inactif'), ('suspendu', 'Suspendu')], default='actif', max_length=20)),
                ('date_inscription', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
                ('classe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etudiants', to='digital.classe')),
            ],
            options={
                'verbose_name': 'Étudiant',
                'verbose_name_plural': 'Étudiants',
                'ordering': ['classe', 'nom'],
            },
        ),
        migrations.CreateModel(
            name='Seance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_seance', models.DateTimeField()),
                ('duree_minutes', models.IntegerField(default=60)),
                ('lieu', models.CharField(blank=True, max_length=100)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seances', to='digital.cours')),
            ],
            options={
                'verbose_name': 'Séance',
                'verbose_name_plural': 'Séances',
                'ordering': ['-date_seance'],
            },
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('valeur', models.FloatField(validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(20)])),
                ('type_evaluation', models.CharField(choices=[('controle', 'Contrôle'), ('examen', 'Examen'), ('travail', 'Travail pratique'), ('participation', 'Participation')], max_length=50)),
                ('date_evaluation', models.DateTimeField(auto_now_add=True)),
                ('commentaire', models.TextField(blank=True)),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='digital.cours')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='digital.etudiant')),
            ],
            options={
                'verbose_name': 'Note',
                'verbose_name_plural': 'Notes',
                'ordering': ['-date_evaluation'],
                'unique_together': {('etudiant', 'cours', 'type_evaluation')},
            },
        ),
        migrations.CreateModel(
            name='Presence',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('statut', models.CharField(choices=[('present', 'Présent'), ('absent', 'Absent'), ('retard', 'En retard'), ('justifie', 'Absent justifié')], default='absent', max_length=20)),
                ('date_enregistrement', models.DateTimeField(auto_now_add=True)),
                ('remarque', models.TextField(blank=True)),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presences', to='digital.etudiant')),
                ('seance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='presences', to='digital.seance')),
            ],
            options={
                'verbose_name': 'Présence',
                'verbose_name_plural': 'Présences',
                'ordering': ['-date_enregistrement'],
                'unique_together': {('seance', 'etudiant')},
            },
        ),
        migrations.CreateModel(
            name='SuiviEtudiant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('taux_presence', models.FloatField(default=0)),
                ('note_generale', models.FloatField(blank=True, null=True)),
                ('remarques_enseignant', models.TextField(blank=True)),
                ('date_derniere_mise_a_jour', models.DateTimeField(auto_now=True)),
                ('cours', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='digital.cours')),
                ('etudiant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suivi', to='digital.etudiant')),
            ],
            options={
                'verbose_name': 'Suivi Étudiant',
                'verbose_name_plural': 'Suivi Étudiants',
                'unique_together': {('etudiant', 'cours')},
            },
        ),
    ]
